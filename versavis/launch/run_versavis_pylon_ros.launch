<?xml version="1.0"?>

<launch>
   <!-- camera name prefix -->
  <arg name="camera_name"        default="ACE" />
  <arg name="camera_type"             default="usb" />
  <!-- enable image pipeline -->
  <arg name="image_proc"              default="true" />
  <!-- camera manager -->
  <arg name="camera_manager"          default="$(arg camera_name)_camera_manager" />
  <!-- <arg name="camera_settings_file"    default="$(find versavis)/cfg/BFS-U3-04S2C.yaml" />
 -->
   <!-- Camera Parameters for pylon_camera_node copied from pylon_camera/launch/pylon_camera_node.launch -->
  <arg name="respawn" default="false" />
  <arg name="debug" default="false" />
  <arg name="node_name" default="pylon_camera_node" />
  <arg name="mtu_size" default="1500" />
  <arg name="startup_user_set" default="CurrentSetting" />
  <arg name="enable_status_publisher" default="true" />
  <arg name="enable_current_params_publisher" default="true" />
  <arg name="config_file_cam0" default="$(find versavis)/cfg/slam_box_cam0.yaml" />
  <arg name="config_file_cam1" default="$(find versavis)/cfg/slam_box_cam1.yaml" />
  <?ignore
  <arg unless="$(arg debug)" name="launch_prefix" value="" />
  <arg     if="$(arg debug)" name="launch_prefix" value="gdb -ex run --args" />
  <arg name="launch_prefix_0" value="" />
  <arg name="launch_prefix_1" value="" />
  \?>
  <arg name="launch_prefix_0" value="$(find versavis)/launch/set_trigger_cam0.sh" />
  <arg name="launch_prefix_1" value="$(find versavis)/launch/set_trigger_cam1.sh" />

  <group ns="$(arg camera_name)_$(arg camera_type)_0" >
    <!-- node mode -->
    <node name="$(arg node_name)" pkg="pylon_camera" type="pylon_camera_node" output="screen"
          respawn="$(arg respawn)" launch-prefix="$(arg launch_prefix_0)">
        <rosparam command="load" file="$(arg config_file_cam0)" />
        <param name="gige/mtu_size" value="$(arg mtu_size)"/>
        <param name="startup_user_set" value="$(arg startup_user_set)"/>
        <param name="enable_status_publisher" value="$(arg enable_status_publisher)"/>
        <param name="enable_current_params_publisher" value="$(arg enable_current_params_publisher)"/>
    </node>
    <node name="compile_nodelet_cam0" pkg="versavis" type="versavis_synchronizer_node"
          required="true" output="screen">
      <param name="driver_topic" type="string" value="$(arg node_name)/image_numbered" />
      <param name="versavis_topic" type="string" value="/versavis/cam0/" />
      <param name="imu_offset_us" type="int" value="0"/>
    </node>
  </group>
  
  <group ns="$(arg camera_name)_$(arg camera_type)_1" >
    <node name="$(arg node_name)" pkg="pylon_camera" type="pylon_camera_node" output="screen"
          respawn="$(arg respawn)" launch-prefix="$(arg launch_prefix_1)">
        <rosparam command="load" file="$(arg config_file_cam1)" />
        <param name="gige/mtu_size" value="$(arg mtu_size)"/>
        <param name="startup_user_set" value="$(arg startup_user_set)"/>
        <param name="enable_status_publisher" value="$(arg enable_status_publisher)"/>
        <param name="enable_current_params_publisher" value="$(arg enable_current_params_publisher)"/>
    </node>
    <node name="compile_nodelet_cam0" pkg="versavis" type="versavis_synchronizer_node"
          required="true" output="screen">
      <param name="driver_topic" type="string" value="$(arg node_name)/image_numbered" />
      <param name="versavis_topic" type="string" value="/versavis/cam1/" />
      <param name="imu_offset_us" type="int" value="0"/>
    </node>
  </group>

  <!-- Relay publish chameleon3 camera_info topic as versavis. -->
  <node name="relay0" pkg="topic_tools" type="relay" args="/$(arg camera_name)_$(arg camera_type)_0/camera_info /versavis/cam0/camera_info" required="true" output="screen"/>
  <node name="relay1" pkg="topic_tools" type="relay" args="/$(arg camera_name)_$(arg camera_type)_1/camera_info /versavis/cam1/camera_info" required="true" output="screen"/>

  <!-- Run VersaVIS link. -->
  <node name="rosserial_python" pkg="rosserial_python" type="serial_node.py"
    args="_port:=/dev/versavis _baud:=250000" respawn="true" output="screen" />

  <!-- Reset VersaVIS with ros message -->
  <node pkg="rostopic" type="rostopic" name="resetter"
    args="pub /versavis/reset std_msgs/Bool false --once" output="screen" />

  <!-- Recieve IMU message. TODO: Adapt to SLAM Box ADIS-->
  <node name="versavis_imu_receiver" pkg="versavis"
      type="versavis_imu_receiver" required="true" output="screen">
    <!-- ADIS16448AMLZ parameters -->
    <param name="imu_accelerator_sensitivity"           value="0.000833" />
    <!-- <param name="imu_gyro_sensitivity"                  value="0.04" /> -->
    <param name="imu_gyro_sensitivity"                  value="0.04" />
    <param name="imu_acceleration_covariance"           value="0.043864908" /> <!-- no idea where it is from -->
    <param name="imu_gyro_covariance"                   value="6e-9" /> <!-- no idea where it is from -->
    <param name="imu_sub_topic"           type="string" value="/versavis/imu_micro"/>
  </node>

  <!-- Dynamic reconfigure. -->
  <!--node name="reconfigure" pkg="rqt_reconfigure" type="rqt_reconfigure" /-->

</launch>
